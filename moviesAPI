const express = require('express')
const path = require('path')

const {open} = require('sqlite')
const sqlite3 = require('sqlite3')

const app = express()
app.use(express.json())
const dbPath = path.join(__dirname, 'moviesData.db')

let db = null

const initializeDBAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () => {
      console.log('Server Running at http://localhost:3000/')
    })
  } catch (e) {
    console.log(`DB Error: ${e.message}`)
    process.exit(1)
  }
}
initializeDBAndServer()
// get movi list
app.get('/movies/', async (request, response) => {
  const moviesQuery = `
  select movie_name from  movie;
  `
  const moviList = await db.all(moviesQuery)
  response.send(moviList.map(eachMovie => ({movieName: eachMovie.movie_name})))
})
// post movie
app.post('/movies/', async (request, response) => {
  const {moviDetails} = request.body
  const {directorId, movieName, leadActor} = {moviDetails}
  const postQuery = `
   insert into movie ( directorId, movieName, leadActor )
   values(
    
    directorId = ${directorId},
    movieName = '${movieName}',
    leadActor = '${leadActor}',
   );`
  const moviAdd = await db.run(postQuery)
  response.send('Movie Successfully Added')
})
// get movie
app.get('/movies/:movieId/', async (request, response) => {
  const id = request.params
  const singlemovie = `select * from movie where 
  movie_id  =${id};`
  const getMovi = await db.get(singlemovie)
  response.send(getMovi)
})
